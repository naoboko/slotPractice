plugins {
    id 'java'
    id 'io.papermc.paperweight.userdev' version '+'
    id 'xyz.jpenilla.run-paper' version '+'
}

group = 'com.github'
version = '1.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        url = "https://repo.yncrypt.net/repository/unknown-network/"
    }
    maven {
        url = "https://jitpack.io"
    }
}

dependencies {
    paperweightDevelopmentBundle("io.papermc.paper:dev-bundle:1.20-R0.1-SNAPSHOT")
    compileOnly group: 'com.github.MilkBowl', name: 'VaultAPI', version: '+'
    compileOnly group: 'net.unknown', name: 'UnknownNetworkCore', version: '5817fc7f', classifier: 'mojang'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

runServer {
    runDirectory(project.file("testServer"))
    systemProperty "un.env", System.getProperty("un.env", "SURVIVAL")
}